interface swarm {
    use wasi:io/streams@0.2.2.{input-stream, output-stream};
    use wasi:io/poll@0.2.2.{pollable};

    enum error {
        unknown,
        access-denied,
        daemon-not-available,
        rpc-error,
        ipc-error,
        stream-already-exists,
    }

    peer-id: func() -> result<string, error>;    
    
    // To stop accepting streams, simply drop the resource
    accept-stream: func(protocol: string) -> result<incoming-streams, error>;    

    resource incoming-streams {
        // return (peer-id, input-stream, output-stream)
        next: func() -> result<tuple<string, input-stream, output-stream>, error>;
        subscribe: func() -> pollable;
    }
}